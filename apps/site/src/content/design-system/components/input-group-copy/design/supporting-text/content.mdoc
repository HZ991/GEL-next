Supporting text sits below the field, it can be a character count, or validated feedback of the information that has been entered.

### Types

```tsx
 <InputGroup width="20" label="Supporting text" supportingText="I am supporting text">
        <Input />
      </InputGroup>;       
```

### Usage examples

```tsx
  render: () => {
    const [inputValue, setInputValue] = useState<string>('');
    const counterText = useMemo(() => {
      const lengthLeft = MAX_LENGTH - inputValue.length;
      return `${lengthLeft} remaining`;
    }, [inputValue]);
    return <InputGroup label="Comments" hint="I am a hint" supportingText={counterText}>
        <Textarea onChange={({
        target: {
          value
        }
      }) => setInputValue(value)} value={inputValue} />
      </InputGroup>;
  }
```
