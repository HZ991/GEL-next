**Sizes:** There are four button group sizes, make sure when laying out forms that your button group size and field sizes are aligned.

```tsx
<div className="grid gap-3">
  <ButtonGroup size="small">
    <ButtonGroupButton value="sm">Sm - 30px</ButtonGroupButton>
    <ButtonGroupButton value="Label">Label</ButtonGroupButton>
  </ButtonGroup>
  <ButtonGroup size="medium">
    <ButtonGroupButton value="md">Md - 36px</ButtonGroupButton>
    <ButtonGroupButton value="Label">Label</ButtonGroupButton>
  </ButtonGroup>
  <ButtonGroup size="large">
    <ButtonGroupButton value="lg">Lg - 42px</ButtonGroupButton>
    <ButtonGroupButton value="Label">Label</ButtonGroupButton>
  </ButtonGroup>
  <ButtonGroup size="xlarge">
    <ButtonGroupButton value="xl">Xl - 48px</ButtonGroupButton>
    <ButtonGroupButton value="Label">Label</ButtonGroupButton>
  </ButtonGroup>
</div>
```

**Multiple items:** We recommend only using up to 3 items in a button group, any more can become too difficult to scan and can become problematic at smaller viewports. Is also best to keep the labels short.

```tsx
<div className="grid gap-3">
  <ButtonGroup look="hero">
    <ButtonGroupButton value="Yes">Yes</ButtonGroupButton>
    <ButtonGroupButton value="No">No</ButtonGroupButton>
  </ButtonGroup>
  <ButtonGroup look="hero">
    <ButtonGroupButton value="Email">Email</ButtonGroupButton>
    <ButtonGroupButton value="Phone">Phone</ButtonGroupButton>
    <ButtonGroupButton value="SMS">SMS</ButtonGroupButton>
  </ButtonGroup>
</div>
```

**Block level:** Using block level button groups will allow the group to stretch the full width of the view port. This is useful for smaller viewports.

```jsx
<div className="grid gap-3">
  <ButtonGroup look="hero" block>
    <ButtonGroupButton value="Email">Email</ButtonGroupButton>
    <ButtonGroupButton value="Phone">Phone</ButtonGroupButton>
    <ButtonGroupButton value="Label">Label</ButtonGroupButton>
  </ButtonGroup>
</div>
```
