### ButtonGroup sizes

```jsx
<ButtonGroup>
  <ButtonGroupButton value="Left">Left</ButtonGroupButton>
  <ButtonGroupButton value="Middle">Middle</ButtonGroupButton>
  <ButtonGroupButton value="Right">Right</ButtonGroupButton>
</ButtonGroup>
```

### ButtonGroup looks

```jsx
<div className="grid gap-3">
  <ButtonGroup
    defaultValue={0}
    label={<p className="typography-body-10 text-muted italic mb-[0.875rem]">Index (integer)</p>}
  >
    <ButtonGroupButton value={0}>Left</ButtonGroupButton>
    <ButtonGroupButton value={1}>Middle</ButtonGroupButton>
    <ButtonGroupButton value={2}>Right</ButtonGroupButton>
  </ButtonGroup>
  <ButtonGroup
    defaultValue="right"
    label={<p className="typography-body-10 text-muted italic mb-[0.875rem]">Key (string)</p>}
  >
    <ButtonGroupButton value="left">Left</ButtonGroupButton>
    <ButtonGroupButton value="middle">Middle</ButtonGroupButton>
    <ButtonGroupButton value="right">Right</ButtonGroupButton>
  </ButtonGroup>
</div>
```

### With onChange

```jsx
() => {
  const [controlled, setControlled] = useState();

  return (
    <div className="grid gap-2">
      <div className="flex gap-1">
        <Button type="button" onClick={() => setControlled('yes')} size="small">
          Set to "yes"
        </Button>
        <Button type="button" onClick={() => setControlled('maybe')} size="small">
          Set to "maybe"
        </Button>
        <Button type="button" onClick={() => setControlled('no')} size="small">
          Set to "no"
        </Button>
        <Button type="button" onClick={() => setControlled('')} size="small">
          reset
        </Button>
      </div>
      <ButtonGroup look="hero" value={controlled}>
        <ButtonGroupButton value="yes">Yes</ButtonGroupButton>
        <ButtonGroupButton value="maybe">Maybe</ButtonGroupButton>
        <ButtonGroupButton value="no">No</ButtonGroupButton>
      </ButtonGroup>
    </div>
  );
};
```
