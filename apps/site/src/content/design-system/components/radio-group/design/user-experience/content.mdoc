Radios should be used when asking a user to select only one item from a list. They have a mutually exclusive, toggle functionality. Once a radio list has had an item selected, it cannot go back to having none selected, so if you need the user to acknowledge a non-selection it is best to include an option like ‘None of these’ in the list.

For simple yes/no questions, a possible alternative to a radio list could be a [Button Group](/design-system/components/button-groups).

### Default selections

Radios traditionally have one option selected as this mirrors the metaphor of how an analog radio (and indeed digital) radio works. The metaphor appears to have lost its etymological roots today, and there are a couple of competing principles at play when considering whether or not to set a radio active by default:

#### Reasons against

1.  By having an option preselected, it appears as though it has been answered, taking on the properties similar to that of placeholder text. When combining this with pre-populated inputs, it only worsens as behavioural assumptions about completion take over. The result is a form which may require clarification or correction at a later date, or give unintended results.
2.  By having a choice selected by default, the user is not taking conscious action to confirm their choice. While this isn't critical, in applications with severe legal consequences, it should be considered.

#### Reasons for

1.  By using data, we can understand which choices most users will make, therefore expediting form completion by using the most popular answer as a default, increasing the likelihood of faster completion.
2.  When integrating high quality data from a database we can pre-populate a form based on what we know about a user, potentially increasing the speed of completion.

While we err on the side of leaving radios unanswered, it is up to each team to decide which path is right for their application.
