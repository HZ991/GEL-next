```tsx
() => {
  const [inputs, setInputs] = useState({});

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    setInputs((prev: object) => ({ ...prev, [e.target.name]: e.target.value }));
  };

  return (
    <Compacta>
      {({ id, setPrimaryTitle, setSecondaryTitle, setTertiaryTitle }) => (
        <Form>
          <FormGroup>
            <FormLabel htmlFor={`primary-${id}`}>Primary</FormLabel>
            <FormHint>Primary title text</FormHint>
            <Input
              name={`primary-${id}`}
              value={inputs[`primary-${id}` as keyof typeof inputs] || ''}
              onChange={e => {
                handleChange(e);
                setPrimaryTitle(e.target.value);
              }}
            />
          </FormGroup>
          <FormGroup>
            <FormLabel htmlFor={`secondary-${id}`}>Secondary</FormLabel>
            <FormHint>Secondary title text</FormHint>
            <Input
              name={`secondary-${id}`}
              value={inputs[`secondary-${id}` as keyof typeof inputs] || ''}
              onChange={e => {
                handleChange(e);
                setSecondaryTitle(e.target.value);
              }}
            />
          </FormGroup>
          <FormGroup>
            <FormLabel htmlFor={`tertiary-${id}`}>Tertiary</FormLabel>
            <FormHint>Tertiary title text</FormHint>
            <Input
              name={`tertiary-${id}`}
              value={inputs[`tertiary-${id}` as keyof typeof inputs] || ''}
              onChange={e => {
                handleChange(e);
                setTertiaryTitle(e.target.value);
              }}
            />
          </FormGroup>
        </Form>
      )}
    </Compacta>
  );
};
```
