Below is an example of how a Compacta may be used with fields and inputs. Any form related elements can exist inside a Compacta.

```tsx
() => {
  const [inputs, setInputs] = useState({});

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    setInputs((prev: object) => ({ ...prev, [e.target.name]: e.target.value }));
  };

  return (
    <Compacta>
      {({ id, setPrimaryTitle, setSecondaryTitle, setTertiaryTitle }) => (
        <Form>
          <Form.Group>
            <Form.Label htmlFor={`primary-default-${id}`}>Primary</Form.Label>
            <Form.Hint id={`primary-default-hint-${id}`}>Primary title text</Form.Hint>
            <Input
              id={`primary-default-${id}`}
              aria-describedby={`primary-default-hint-${id}`}
              name={`primary-default-${id}`}
              value={inputs[`primary-default-${id}` as keyof typeof inputs] || ''}
              onChange={e => {
                handleChange(e);
                setPrimaryTitle(e.target.value);
              }}
            />
          </Form.Group>
          <Form.Group>
            <Form.Label htmlFor={`secondary-default-${id}`}>Secondary</Form.Label>
            <Form.Hint id={`secondary-default-hint-${id}`}>Secondary title text</Form.Hint>
            <Input
              id={`secondary-default-${id}`}
              aria-describedby={`secondary-default-hint-${id}`}
              name={`secondary-default-${id}`}
              value={inputs[`secondary-default-${id}` as keyof typeof inputs] || ''}
              onChange={e => {
                handleChange(e);
                setSecondaryTitle(e.target.value);
              }}
            />
          </Form.Group>
          <Form.Group>
            <Form.Label htmlFor={`tertiary-default-${id}`}>Tertiary</Form.Label>
            <Form.Hint id={`tertiary-default-hint-${id}`}>Tertiary title text</Form.Hint>
            <Input
              id={`tertiary-default-${id}`}
              aria-describedby={`tertiary-default-hint-${id}`}
              name={`tertiary-default-${id}`}
              value={inputs[`tertiary-default-${id}` as keyof typeof inputs] || ''}
              onChange={e => {
                handleChange(e);
                setTertiaryTitle(e.target.value);
              }}
            />
          </Form.Group>
        </Form>
      )}
    </Compacta>
  );
};
```
