### Default Modal

```jsx
() => {
  const state = useOverlayTriggerState({});
  return (
    <>
      <Modal isDismissable state={state} aria-label="Modal heading" body>
        ‘It was much pleasanter at home’, thought poor Alice, ‘when one wasn’t always growing larger and smaller, and
        being ordered about by mice and rabbits. I almost wish I hadn’t gone down that rabbit-hole — and yet — and yet —
        it’s rather curious, you know, this sort of life! I do wonder what can have happened to me! When I used to read
        fairy-tales, I fancied that kind of thing never happened, and now here I am in the middle of one! There ought to
        be a book written about me, that there ought!’
      </Modal>
      <Button look="primary" soft onClick={state.open}>
        Open
      </Button>
    </>
  );
};
```

### Modal sizes

```tsx
() => {
  const stateSM = useOverlayTriggerState({});
  const stateMD = useOverlayTriggerState({});
  const stateLG = useOverlayTriggerState({});

  const states = useMemo(() => {
    return {
      sm: stateSM,
      md: stateMD,
      lg: stateLG,
    };
  }, [stateSM, stateMD, stateLG]);

  return (
    <div className="flex justify-center gap-4">
      {[
        { size: 'sm', label: 'Small' },
        { size: 'md', label: 'Default' },
        { size: 'lg', label: 'Large' },
      ].map(({ size, label }: { size: string; label: string }) => (
        <Fragment key={size}>
          <Modal isDismissable size={size} state={states[size as 'sm' | 'md' | 'lg']} title="Sudden and magnificent">
            <ModalBody>
              <p>
                The line of the horizon was clear and hard against the sky, and in one particular quarter it showed
                black against a silvery climbing phosphorescence that grew and grew.
              </p>
            </ModalBody>
            <ModalFooter>
              <div className="flex gap-1 justify-end">
                <Button look="faint" onClick={states[size as 'sm' | 'md' | 'lg'].close}>
                  Close
                </Button>
                <Button look="primary">Save changes</Button>
              </div>
            </ModalFooter>
          </Modal>
          <Button soft look="primary" onClick={states[size as 'sm' | 'md' | 'lg'].open}>
            {label} Modal
          </Button>
        </Fragment>
      ))}
    </div>
  );
};
```

### Modal with Footer

```jsx
() => {
  const state = useOverlayTriggerState({});

  return (
    <Fragment>
      <Modal state={state} title="Title" isDismissable={true}>
        <ModalBody>I'm children</ModalBody>
        <ModalFooter>
          <p>Lorem, ipsum dolor</p>
        </ModalFooter>
      </Modal>
      <Button look="primary" soft onClick={state.open}>
        Open Modal
      </Button>
    </Fragment>
  );
};
```

### Not dismissable example

```jsx
() => {
  const state = useOverlayTriggerState({});

  return (
    <Fragment>
      <Modal isKeyboardDismissDisabled state={state} title="Modal title">
        <ModalBody>I'm children</ModalBody>
        <ModalFooter className="flex justify-end gap-2">
          <Button look="faint" onClick={state.close}>
            Close
          </Button>
          <Button look="primary">Submit</Button>
        </ModalFooter>
      </Modal>
      <Button look="primary" soft onClick={state.open}>
        Open Modal
      </Button>
    </Fragment>
  );
};
```
