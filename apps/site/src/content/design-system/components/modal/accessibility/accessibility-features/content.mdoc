- To make the content easier to read when displayed on small screens, the modal fills 100% of the screen. Completely covering the background window also hides background movement that occurs on some mobile devices when scrolling content inside the dialog.
- Modal heading receives focus and is announced on open. The user is able to ‘arrow down’ to navigate the modal content if desired. This pattern differs from the [WAI-ARIA Authoring Practices Modal Dialog](https://www.w3.org/TR/wai-aria-practices-1.1/examples/dialog-modal/dialog.html) pattern, which announces all modal content on open and is often considered unnecessarily verbose for screen reader users.
- Close button appears below the heading in the source order; users can easily ‘arrow down’ and close the modal if the heading content was of no interest
- When the modal is open, focus is constrained within the context of the modal. Sequential keyboard navigation loops through focusable elements within the modal; and not to any elements found outside of the modal.
- Close the modal using Close button, Esc key or background click (if modal is dismissible)
- When the modal closes, focus returns to the button that originally toggled the modal
- The modal shape, text and icon content is visible in Windows High Contrast Mode (WHCM). Button ‘look’ styling (colour) is not visible in WHCM.

### Accessibility in the HTML

- `<div aria-modal="true" aria-hidden="{true|false}">`: Tells assistive technologies that the windows underneath the current dialog are not available for interaction (inert) and&nbsp;*aria-hidden*&nbsp;ensures the modal is hidden from assistive technologies as required.&nbsp;**Note: there is no**&nbsp;***role="dialog"***&nbsp;**attribute**. This is intentional as many screen readers will announce all modal content on open if this role is used. Our approach is to simply announce the heading and let the user be in control (as mentioned above).
- `<h1 tabindex="-1">`: Modal heading has a&nbsp;*tabindex*&nbsp;attribute, enabling the heading to receive focus (programmatically). The heading is announced on open. The&nbsp;*tabindex*&nbsp;value uses&nbsp;*-1*&nbsp;(rather than&nbsp;*0*) because we don’t need the heading focusable during normal keyboard navigation.
- `<button aria-label="Close modal">`: Close button announced as “Close modal” in screen readers

### Keyboard support

- ‘Tab’ moves focus to next focusable element inside the dialog. When focus is on the last focusable element in the dialog, moves focus to the first focusable element in the dialog.
- ‘Shift + Tab’ moves focus to previous focusable element inside the dialog
- When focus is on the first focusable element in the dialog, moves focus to the last focusable element in the dialog
- ‘Esc’ key closes the modal (if modal is dismissible)
