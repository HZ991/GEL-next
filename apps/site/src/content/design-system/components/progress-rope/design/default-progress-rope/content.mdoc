The default progress rope is used for simple processes with only a small number of steps.

```tsx
() => {
  const [activeIndex, setActiveIndex] = useState(0);
  const handleClick = useCallback(
    (index: number) => () => {
      setActiveIndex(index);
    },
    [],
  );
  const PROGRESS_ROPE_DATA: ProgressRopeProps['data'] = [
    { text: <h3>Step 1</h3>, onClick: handleClick(0) },
    { text: <h3>Step 2</h3>, onClick: handleClick(1) },
    { text: <h3>Step 3</h3>, onClick: handleClick(2) },
    { text: <h3>Step 4</h3>, onClick: handleClick(3) },
    { text: <h3>Step 5</h3>, onClick: handleClick(4) },
    { text: <h3>Review and Submit</h3>, onClick: handleClick(5) },
  ];

  return (
    <div>
      <ProgressRope current={activeIndex} data={PROGRESS_ROPE_DATA} />
      <div>
        <h3>Helper Controls</h3>
        <h4>Current: {activeIndex}</h4>
        <Button onClick={() => setActiveIndex(state => --state)}>prev</Button>{' '}
        <Button onClick={() => setActiveIndex(state => ++state)}>next</Button>
      </div>
    </div>
  );
};
```
