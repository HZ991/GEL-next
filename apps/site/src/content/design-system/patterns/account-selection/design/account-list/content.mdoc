In a scenario where you have a list of accounts of different types, they can be grouped into categories to help users easily scan.

THIS DEMO NEEDS TO BE ADJUSTED TO SHOW THE CORRECT ACCOUN TYPE LAYOUTS.

```
() => {
  const MOCK_ACCOUNTS = [
    {
      title: 'Cash',
      id: 'cash',
      accounts: [
        {
          name: 'Westpac Life',
          amount: '$7,540.34',
          number: '732-123 746587',
        },
        {
          name: 'Westpac Choice',
          amount: '$1,234.99',
          number: '732-123 746587',
hint: 'available test',
        },
        {
          name: 'Offset account for loan',
          amount: '$20,000.00',
          number: '732-123 123456',
hint: 'available test',
        },
      ],
    },
    {
      title: 'Loans',
      id: 'loans',
      accounts: [
        {
          name: 'US dollar currency account',
          amount: '$3,957.57',
          number: '123-456 1234567',
hint: 'available test',
        },
        {
          name: 'British pound currency account',
          amount: '$9,999,999,999.99',
          number: '123-456 1234567',
hint: 'available test',
        },
      ],
    },
    {
      title: 'Credit cards',
      id: 'credit-cards',
      accounts: [
        {
          name: 'Altitude Black World Mastercard',
          amount: '-$3,957.57',
          number: 'Card ending in 1234',
hint: 'available test',
        },
      ],
    },
  ];

  return (
    <>
      {MOCK_ACCOUNTS.map(({ title, id, accounts }) => (
          <div key={id}>
            <h3 mb=1 className="font-normal">{title}</h3>
            {accounts.map(({ name, amount, number, hint }) => (
<Grid>
  <GridItem span={{ initial: 12, sm: 6 }}>
              <FlexiCell
                tag="a"
                href="#"
                withBorder
                key={name}
                after={
                  <FlexiCellAdornment>
                    <FlexiCellLabel className="font-semibold" rightLabel tag="h4">
                      {amount}
                    </FlexiCellLabel>
                    <FlexiCellHint>{hint}</FlexiCellHint>
                  </FlexiCellAdornment>
                }
              >
                <FlexiCellLabel className="font-normal" tag="h4">
                  {name}
                </FlexiCellLabel>
                <FlexiCellHint>{number}</FlexiCellHint>
              </FlexiCell>
  </GridItem>
</Grid>
            ))}
          </div>
      ))}
    </>
  );
};

```
